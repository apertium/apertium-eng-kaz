<?xml version="1.0" encoding="UTF-8"?>
<!-- -*- nxml -*- -->
<transfer default="chunk">
  <section-def-cats>
    <def-cat n="pers-verb"> <!-- past and present tense -->
      <cat-item tags="vblex.pres.*"/>
      <cat-item tags="vblex.past"/>
    </def-cat>
    <def-cat n="pers-verb-to-be"> <!-- past and present tense -->
      <cat-item tags="vbser.pres.*"/>
      <cat-item tags="vbser.past.*"/>
      <cat-item tags="vbser.past"/>
    </def-cat>
    <def-cat n="verb-ing"> <!-- past and present tense -->
      <cat-item tags="vblex.ger"/>
<!--      <cat-item tags="vbser.ger"/>
      <cat-item tags="vbhaver.ger"/>
      <cat-item tags="vbmod.ger"/>  --> <!-- We'll try later -->
   </def-cat>
    
    <def-cat n="nom">
      <cat-item tags="n.*"/>
      <cat-item tags="np.ant.*"/>
    </def-cat>
    <def-cat n="num">
      <cat-item tags="num.*"/>
     </def-cat>
    <def-cat n="adjec">
      <cat-item tags="adj.*"/>
      <cat-item tags="adj"/>
    </def-cat>
    <def-cat n="art">
      <cat-item tags="det.def.*"/>
      <cat-item tags="det.ind.*"/>
    </def-cat>
    <def-cat n="prep">
      <cat-item tags="pr"/>
    </def-cat>
    <def-cat n="sent">
      <cat-item tags="sent"/>
    </def-cat>
  </section-def-cats>
 
  <section-def-attrs>
    <def-attr n="a_tense">
      <attr-item tags="pres"/>
      <attr-item tags="past"/>
    </def-attr> 
    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="np.ant"/>
    </def-attr>
     <def-attr n="a_num">
      <attr-item tags="num"/>
    </def-attr>
    <def-attr n="a_gen">
      <attr-item tags="f"/>
      <attr-item tags="m"/>
      <attr-item tags="mf"/>
    </def-attr>
    <def-attr n="a_nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
    </def-attr>
    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
    </def-attr>
    <def-attr n="a_kaz_verb"> 
      <attr-item tags="v.tv"/>
      <attr-item tags="v.iv"/>
    </def-attr>
    <def-attr n="a_cas">
      <attr-item tags="nom"/>
      <attr-item tags="acc"/>
      <attr-item tags="dat"/>
      <attr-item tags="gen"/>
      <attr-item tags="loc"/>
      <attr-item tags="ins"/>
      <attr-item tags="abl"/>
    </def-attr>

  </section-def-attrs>
  <section-def-vars>
    <def-var n="number"/>
    <def-var n="current_verb"/>
    <def-var n="plural"/>
    <def-var n="case"/>
    <def-var n="tense"/>
    <def-var n="verb-pers"/> <!-- State variable -->
    <def-var n="verb-nbr"/> <!-- State variable -->
  </section-def-vars>


  <section-def-macros>

    <def-macro n="initialize_number" npar="0">
          <let>
            <var n="number"/>
            <lit v=""/>
          </let>
    </def-macro>

    <def-macro n="initialize_case" npar="0">
          <let>
            <var n="case"/>
            <lit-tag v="nom"/>
          </let>
    </def-macro>

    <def-macro n="choose_case" npar="1">
    <choose>  
     <when> <!-- FMT: Need to add the rest of the prepositions, and have an
                      alternative out section to avoid, e.g. "Through gardens → бақша" -->
        <test>
          <equal caseless="yes">
            <clip pos="1" side="sl" part="lem"/>
            <lit v="in"/>
          </equal>
        </test>
        <let>
          <var n="case"/>
          <lit-tag v="loc"/>
        </let>
	</when>    
       <when> 
        <test>
          <equal caseless="yes">
            <clip pos="1" side="sl" part="lem"/>
            <lit v="from"/>
          </equal>
        </test>
        <let>
          <var n="case"/>
          <lit-tag v="abl"/>
        </let>
	</when>    
       <when> 
        <test>
          <equal caseless="yes">
            <clip pos="1" side="sl" part="lem"/>
            <lit v="to"/>
          </equal>
        </test>
        <let>
          <var n="case"/>
          <lit-tag v="dat"/>
        </let>
	</when>    
     <otherwise>
          <let>
            <var n="case"/>
            <lit-tag v="nom"/>
          </let>
     </otherwise>
     </choose>
    </def-macro>


<def-macro n="gen-simple-verb" npar="1">
    <out>
      <chunk name="pers-verb">
      <tags>
        <tag><lit-tag v="SV"/></tag>
      </tags>
        <lu>
          <clip pos="1" side="tl" part="lem"/>
	  <clip pos="1" side="tl" part="a_kaz_verb"/>
          <var n="tense"/>
          <var n="verb-pers"/>	
          <var n="verb-nbr"/>
        </lu>
      </chunk>
    </out>
</def-macro>
    

</section-def-macros>


<section-rules>

<rule comment="RULE: verb"> <!-- first attempt at simple verbs -->
  <pattern>
    <pattern-item n="pers-verb"/>
  </pattern>
  <action>
    <choose>
     <when>
       <test>
         <equal><var n="verb-pers"/><lit v=""/></equal></test>
      <let>
          <var n="verb-pers"/><lit-tag v="p3"/>
      </let>
     </when>
    </choose>
    <choose>
     <when>
       <test>
         <equal><var n="verb-nbr"/><lit v=""/></equal></test>
      <let>
          <var n="verb-nbr"/><lit-tag v="sg"/>
      </let>
     </when>
    </choose>
    <choose>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let>
      </when>
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="ifi"/></let>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let>
      </otherwise> 
    </choose>
      <call-macro n="gen-simple-verb">
         <with-param pos="1"/> 
     </call-macro>
  </action>
</rule>

<rule comment="RULE: be + verb-ing"> <!-- first attempt at "ing" verbal forms -->
  <pattern>
    <pattern-item n="pers-verb-to-be"/>
    <pattern-item n="verb-ing"/> <!-- * -->
   </pattern>
  <action>
    <choose>
     <when>
       <test>
         <equal><var n="verb-pers"/><lit v=""/></equal></test>
      <let>
          <var n="verb-pers"/><lit-tag v="p3"/>
      </let>
     </when>
    </choose>
    <choose>
     <when>
       <test>
         <equal><var n="verb-nbr"/><lit v=""/></equal></test>
      <let>
          <var n="verb-nbr"/><lit-tag v="sg"/>
      </let>
     </when>
    </choose>
    <choose>
<!--      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="pres"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="aor"/></let>
      </when> --> <!-- We don't know how to do this yet -->
      <when>
        <test>
          <equal>
             <clip pos="1" side="sl" part="a_tense"/>
             <lit-tag v="past"/>
          </equal>
        </test>
        <let><var n="tense"/><lit-tag v="past"/></let>
      <call-macro n="gen-simple-verb">
         <with-param pos="2"/> 
     </call-macro>
      </when>
      <otherwise>
        <let><var n="tense"/><lit-tag v="aor"/></let> <!-- This is clearly wrong but we'll change it later -->
      <call-macro n="gen-simple-verb">
         <with-param pos="2"/> 
     </call-macro>
      </otherwise> 
    </choose>

  </action>
</rule>
    

<rule comment="RULE: prep nom"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
    <choose>
      <when>
        <test>
           <equal>
               <clip pos="2" side="sl" part="a_nbr"/>
               <lit-tag v="pl"/>
           </equal>
        </test>
        <let> <var n="number"/><lit-tag v="pl"/> </let>
      </when>
     </choose>
     <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro>
    <out>
    <chunk name="prep-nom">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>  
        <clip pos="2" side="tl" part="lem"/> 
        <clip pos="2" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     <b pos="1"/>
    </out>
  </action>
</rule>
    
<rule comment="RULE: adjec nom"> 
  <pattern>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
    <choose>
      <when>
        <test>
           <equal>
               <clip pos="2" side="sl" part="a_nbr"/>
               <lit-tag v="pl"/>
           </equal>
        </test>
        <let> <var n="number"/><lit-tag v="pl"/> </let>
      </when>
     </choose>
     <let>
          <var n="case"/>
          <lit-tag v="nom"/>
        </let>
    <out>
    <chunk name="adjec-nom">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    </tags>
    <lu>
        <clip pos="1" side="tl" part="whole"/> 
    </lu>
     <b pos="1"/>
    <lu>  
        <clip pos="2" side="tl" part="lem"/> 
        <clip pos="2" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     </out>
  </action>
</rule>
 
<rule comment="RULE: num nom"> 
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
        <let>
          <var n="case"/>
          <lit-tag v="nom"/>
        </let>
    <out>
    <chunk name="num-nom">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    </tags>
    <lu>
        <clip pos="1" side="tl" part="lem"/> 
        <clip pos="1" side="tl" part="a_num"/> 
        <!-- We could have used <lit-tag v="num"/> -->
    </lu>
     <b pos="1"/>
    <lu>  
        <clip pos="2" side="tl" part="lem"/> 
        <clip pos="2" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     </out>
  </action>
</rule>

<rule comment="RULE: prep num nom"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
       <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro>
    <out>
    <chunk name="prep-num-nom">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>
        <clip pos="2" side="tl" part="lem"/> 
        <clip pos="2" side="tl" part="a_num"/> 
        <!-- We could have used <lit-tag v="num"/> -->
    </lu>
     <b pos="2"/>
    <lu>  
        <clip pos="3" side="tl" part="lem"/> 
        <clip pos="3" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     </out>
  </action>
</rule>

<rule comment="RULE: art num nom"> 
    <pattern>
    <pattern-item n="art"/>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
      <call-macro n="choose_case">
        <with-param pos="3"/>
     </call-macro>
      <let>
          <var n="case"/>
          <lit-tag v="nom"/>
        </let>
    <out>
    <chunk name="art-num-nom">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    </tags>
    <lu>
        <clip pos="2" side="tl" part="lem"/> 
        <clip pos="2" side="tl" part="a_num"/> 
        <!-- We could have used <lit-tag v="num"/> -->
    </lu>
    <b pos="1"/>
    <lu>  
        <clip pos="3" side="tl" part="lem"/> 
        <clip pos="3" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
   <b pos="2"/>
    </out>
  </action>
</rule>

<rule comment="RULE: prep art num nom"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="art"/>
    <pattern-item n="num"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
       <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro>
    <out>
    <chunk name="prep-art-num-nom">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>
        <clip pos="3" side="tl" part="lem"/> 
        <clip pos="3" side="tl" part="a_num"/> 
        <!-- We could have used <lit-tag v="num"/> -->
    </lu>
    <b pos="3"/>
    <lu>  
        <clip pos="4" side="tl" part="lem"/> 
        <clip pos="4" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     </out>
  </action>
</rule>

<rule comment="RULE: art adjec nom">  
  <pattern>
     <pattern-item n="art"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
    <choose>
      <when>
        <test>
           <equal>
               <clip pos="3" side="sl" part="a_nbr"/>
               <lit-tag v="pl"/>
           </equal>
        </test>
        <let> <var n="number"/><lit-tag v="pl"/> </let>
      </when>
     </choose>
     <let>
          <var n="case"/>
          <lit-tag v="nom"/>
        </let>
    <out>
    <chunk name="art-adjec-nom">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    </tags>
    <lu>
        <clip pos="2" side="tl" part="whole"/> 
    </lu>
     <b pos="1"/>
    <lu>  
        <clip pos="3" side="tl" part="lem"/> 
        <clip pos="3" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     <b pos="2"/>
     </out>
  </action>
</rule>

<rule comment="RULE: num adjec nom"> 
  <pattern>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
    <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro> 
    <let>
          <var n="case"/>
          <lit-tag v="nom"/>
        </let>
    <out>
    <chunk name="num-adjec-nom">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    </tags>
    <lu>
        <clip pos="1" side="tl" part="lem"/> 
        <clip pos="1" side="tl" part="a_num"/> 
        <!-- We could have used <lit-tag v="num"/> -->
    </lu>
    <b pos="1"/>
    <lu>
        <clip pos="2" side="tl" part="whole"/> 
    </lu>
    <b pos="2"/>
    <lu>  
        <clip pos="3" side="tl" part="lem"/> 
        <clip pos="3" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="RULE: art num adjec nom"> 
    <pattern>
    <pattern-item n="art"/>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
      <call-macro n="choose_case">
        <with-param pos="4"/>
     </call-macro>
      <let>
          <var n="case"/>
          <lit-tag v="nom"/>
        </let>
    <out>
    <chunk name="art-num-adjec-nom">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    </tags>
    <lu>
        <clip pos="2" side="tl" part="lem"/> 
        <clip pos="2" side="tl" part="a_num"/> 
        <!-- We could have used <lit-tag v="num"/> -->
    </lu>
    <b pos="1"/>
    <lu>
        <clip pos="3" side="tl" part="whole"/> 
    </lu>
   <b pos="2"/>
    <lu>  
        <clip pos="4" side="tl" part="lem"/> 
        <clip pos="4" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
   <b pos="3"/>
    </out>
  </action>
</rule>

<rule comment="RULE: prep num adjec nom"> 
    <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
      <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro>
    <out>
    <chunk name="prep-num-adjec-nom">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>
        <clip pos="2" side="tl" part="lem"/> 
        <clip pos="2" side="tl" part="a_num"/> 
        <!-- We could have used <lit-tag v="num"/> -->
    </lu>
    <b pos="1"/>
    <lu>
        <clip pos="3" side="tl" part="whole"/> 
    </lu>
   <b pos="2"/>
    <lu>  
        <clip pos="4" side="tl" part="lem"/> 
        <clip pos="4" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
   <b pos="3"/>
    </out>
  </action>
</rule>

<rule comment="RULE: prep adjec nom"> 
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
    <choose>
      <when>
        <test>
           <equal>
               <clip pos="3" side="sl" part="a_nbr"/>
               <lit-tag v="pl"/>
           </equal>
        </test>
        <let> <var n="number"/><lit-tag v="pl"/> </let>
      </when>
     </choose>
     <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro>
    <out>
    <chunk name="prep-adjec-nom">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>
        <clip pos="2" side="tl" part="whole"/> 
    </lu>
     <b pos="1"/>
    <lu>  
        <clip pos="3" side="tl" part="lem"/> 
        <clip pos="3" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     <b pos="2"/>
    </out>
  </action>
</rule>

<rule comment="RULE: prep art adjec nom">  
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="art"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
    <choose>
      <when>
        <test>
           <equal>
               <clip pos="4" side="sl" part="a_nbr"/>
               <lit-tag v="pl"/>
           </equal>
        </test>
        <let> <var n="number"/><lit-tag v="pl"/> </let>
      </when>
     </choose>
     <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro>
    <out>
    <chunk name="prep-art-adjec-nom">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
      <b pos="1"/>
    <lu>
        <clip pos="3" side="tl" part="whole"/> 
    </lu>
     <b pos="2"/>
    <lu>  
        <clip pos="4" side="tl" part="lem"/> 
        <clip pos="4" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="RULE: prep art num adjec nom"> 
    <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="art"/>
    <pattern-item n="num"/>
    <pattern-item n="adjec"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
      <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro>
    <out>
    <chunk name="prep-art-num-adjec-nom">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>
        <clip pos="3" side="tl" part="lem"/> 
        <clip pos="3" side="tl" part="a_num"/> 
    </lu>
    <b pos="2"/>
    <lu>
        <clip pos="4" side="tl" part="whole"/> 
    </lu>
   <b pos="3"/>
    <lu>  
        <clip pos="5" side="tl" part="lem"/> 
        <clip pos="5" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
    </out>
  </action>
</rule>

<rule comment="RULE: prep art nom"> <!-- FMT copy 20120610 ...-->
  <pattern>
    <pattern-item n="prep"/>
    <pattern-item n="art"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
    <choose>
      <when>
        <test>
           <equal>
               <clip pos="3" side="sl" part="a_nbr"/>
               <lit-tag v="pl"/>
           </equal>
        </test>
        <let> <var n="number"/><lit-tag v="pl"/> </let>
      </when>
     </choose>
      <call-macro n="choose_case">
        <with-param pos="1"/>
     </call-macro>
    <out>
    <chunk name="prep-art-nom">
    <tags>
    <tag><lit-tag v="AdvP"/></tag>
    </tags>
    <lu>  
        <clip pos="3" side="tl" part="lem"/> 
        <clip pos="3" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     <b pos="1"/>
     <b pos="2"/>
    </out>
  </action>
</rule>


<rule comment="RULE: art nom"> 
  <pattern>
    <pattern-item n="art"/>
    <pattern-item n="nom"/>
  </pattern>
  <action>
    <call-macro n="initialize_number"/>
    <choose>
      <when>
        <test>
           <equal>
               <clip pos="2" side="sl" part="a_nbr"/>
               <lit-tag v="pl"/>
           </equal>
        </test>
        <let> <var n="number"/><lit-tag v="pl"/> </let>
      </when>
     </choose>
         <let>
            <var n="case"/>
            <lit-tag v="nom"/>
          </let>
    <out>
    <chunk name="art-nom">
    <tags>
    <tag><lit-tag v="SN"/></tag>
    </tags>
    <lu>  
        <clip pos="2" side="tl" part="lem"/> 
        <clip pos="2" side="tl" part="a_nom"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
     <b pos="1"/>
    </out>
  </action>
</rule>


<rule comment="RULE: nom">  <!-- FMT -->
  <pattern>
    <pattern-item n="nom"/>
  </pattern>
  <action>
   <call-macro n="initialize_number"/>
    <let>
       <var n="case"/>
       <lit-tag v="nom"/>
    </let>
    <choose>
      <when>
        <test>
           <equal>
               <clip pos="1" side="sl" part="a_nbr"/>
               <lit-tag v="pl"/>
           </equal>
        </test>
        <let> <var n="number"/><lit-tag v="pl"/> </let>
      </when>
     </choose>
    <out>
    <chunk name="SN">
    <tags>
    <tag><lit-tag v="nom"/></tag>
    </tags>
    <lu>  
        <clip pos="1" side="tl" part="lem"/> 
        <clip pos="1" side="tl" part="a_nom"/>
        <clip pos="1" side="tl" part="a_gen"/>
        <var n="number"/> 
        <var n="case"/>  
     </lu>
    </chunk>
    </out>
  </action>
</rule>
 
    <rule comment="REGLA: SENT">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <let> <!-- approx: assign 3rd person singular for verbs -->
          <var n="verb-pers"/>
          <lit v="p3"/>
        </let>
        <let>
          <var n="verb-nbr"/>
          <lit v="sg"/>
        </let>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

  </section-rules>
</transfer>
